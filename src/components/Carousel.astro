---
const { data } = Astro.props
---

<div class="carousel">
  <div class="media">
    <div class="controls">
      <div class="controls--prev" aria-label="Previous slide">&lt;</div>
      <div class="controls--next" aria-label="Next slide">&gt;</div>
    </div>

    {data.map(({ src, alt, title, desc, linkText, link }) => (
      <div class="media--item">
        {src && alt && <img src={src} alt={alt} />}
        {title && <h3>{title}</h3>}
        {desc && <p>{desc}</p>}
        {linkText && link && <a href={link} class="link" target="_blank">{linkText}</a>}
      </div>
    ))}

  </div>
</div>

<script>
  const carousels = document.querySelectorAll('.carousel')
  carousels.forEach(carousel => {
    const prev = carousel.querySelector(".controls--prev")
    const next = carousel.querySelector(".controls--next")
    const mediaItems = carousel.querySelectorAll(".media--item")
    let currentSlide = 0
    const mediaItemsLength = mediaItems.length

    const itemsLoop = () => {
      const translateX = `translateX(-${currentSlide * 100}%)`
      mediaItems.forEach((item) => {
          const itemElement = item as HTMLElement
          itemElement.style.transform = translateX
      })
    }

    prev.addEventListener("click", () => {
      currentSlide = (currentSlide - 1 + mediaItemsLength) % mediaItemsLength
      itemsLoop()
    })

    next.addEventListener("click", () => {
      currentSlide = (currentSlide + 1) % mediaItemsLength
      itemsLoop()
    })

    itemsLoop()
  })
</script>



<style lang="sass">
  @import '../css/mixins.sass'

  .carousel
    background-color: lightgray
    // max-width: 700px
    margin-inline: auto
    position: relative
    margin-block: 2rem
    padding: 1rem
    border-radius: 0.5rem
    

  .media
    position: relative
    top: 0
    +flex
    overflow-x: hidden
    width: 100%

    &--item
      flex: 0 0 100%
      width: 100%

      img
        width: 100%
        height: 400px
        border-radius: 0.25rem
        object-fit: cover

  .controls
    max-width: 100%
    width: 100%
    height: 400px
    position: absolute
    top: 0
    z-index: 2
    display: flex
    justify-content: space-between
    align-items: center
    
    // &--prev
    //   border-top-right-radius: 0.5rem
    //   border-bottom-right-radius: 0.5rem

    // &--next
    //   border-top-left-radius: 0.5rem
    //   border-bottom-left-radius: 0.5rem

    &--prev,
    &--next
      background-color: white
      padding: 0.75rem
      cursor: pointer
      font-weight: 900
      background-color: #00000060
      color: #fff
      transition: background-color 0.2s ease-in-out
      // display: flex
      // justify-content: center
      // align-items: center
      user-select: none
      +flex($justify: center, $align: center)

      &:hover
        background-color: #00000095
        color: white
</style>